version: '2.3'

services:
  ###### INFRASTRUCTURE ######
  postgres:
    image: postgres:14.1-alpine
    command:
      - "postgres"
      - "-c"
      - "max_connections=300"
      - "-c"
      - "shared_buffers=500MB"
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - '4566:4566'
      - '4571:4571'
    environment:
      - SERVICES=sqs,iam
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - '/tmp/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - ./scripts/localstack:/docker-entrypoint-initaws.d
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - awslocal sqs list-queues
      interval: 5s
      timeout: 10s
      start_period: 15s

  ###### APPLICATION ######
  base:
    build:
      context: .
      args:
        - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env.example

  rest-server:
    container_name: rest-server
    extends: base
    command: npm run start:rest
    environment:
      - APP_NAME=rest_server
      - APP_TYPE=server
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/_liveness_check_"]
      interval: 10s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
      migrate:
        condition: service_started

  sqs-workers:
    container_name: sqs-workers
    extends: base
    command: npm run start:sqs
    environment:
      - APP_NAME=sqs_workers
      - APP_TYPE=worker
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
      migrate:
        condition: service_started

  ###### ONE-OFF TASKS ######
  migrate:
    extends: base
    entrypoint: npm run migrate
    depends_on:
      - postgres

  test:
    extends: base
    entrypoint: npm test
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
      migrate:
        condition: service_started

  jobs:
    extends: base
    entrypoint: npm run start:jobs
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
      migrate:
        condition: service_started
